variables:
  DJANGO_SETTINGS_MODULE: conf.settings.testing
  NODE_MODULES_DIR: ./node_modules
  PIP_CACHE_DIR: ./.pip-cache
  PYTHON_VENV_DIR: ./.env

stages:
  - build
  - test
  - deploy

build_js:
  stage: build
  image: node:8.9-alpine
  cache:
    paths:
      - $NODE_MODULES_DIR
  artifacts:
    expire_in: "1 hrs"
    paths:
      - $NODE_MODULES_DIR
  script: npm install

build:
  stage: build
  image: python:3.6.4-alpine3.7 # Must be equal to Dockerfile FROM image
  cache:
    paths:
      - $PIP_CACHE_DIR
      - $PYTHON_VENV_DIR
  artifacts:
    expire_in: "1 hrs"
    paths:
      - $PIP_CACHE_DIR
      - $PYTHON_VENV_DIR
  script:
    - python -m venv $PYTHON_VENV_DIR
    - source $PYTHON_VENV_DIR/bin/activate
    - pip install -r requirements/testing.txt --cache-dir $PIP_CACHE_DIR


.test_template: &test_definition
  stage: test
  image: python:3.6.4-alpine3.7 # Must be equal to Dockerfile FROM image
  before_script:
    - source $PYTHON_VENV_DIR/bin/activate
  dependencies:
    - build

migration_test:
  <<: *test_definition
  script:
    - time python3 manage.py migrate --settings=$DJANGO_SETTINGS_MODULE

tests:
  <<: *test_definition
  script: time sh scripts/tests.sh

pylint:
  <<: *test_definition
  script: time sh scripts/pylint.sh

flake8:
  <<: *test_definition
  script: time sh scripts/flake8.sh

jscpd:
  image: node:8.9-alpine
  stage: test
  script: time sh scripts/jscpd.sh
  dependencies:
    - build_js

eslint:
  stage: test
  image: node:8.9-alpine
  script: time sh scripts/eslint.sh
  dependencies:
    - build_js

# This is an example of how to configure Continuous Delivery
# You should automatically deploy to testing every new commit in master branch.
# You should automatically deploy to staging every new tag.
# You should manually deploy to production after checking the tag deployed to staging.

deploy_testing:
  stage: deploy
  script: sh deployment/continuos_delivery.sh testing
  environment: testing
  only:
    - master

deploy_staging:
  stage: deploy
  script: sh deployment/continuos_delivery.sh staging
  environment: staging
  only:
    - tags

deploy_production:
  stage: deploy
  script: sh deployment/continuos_delivery.sh production
  environment: production
  when: manual
  only:
    - tags
