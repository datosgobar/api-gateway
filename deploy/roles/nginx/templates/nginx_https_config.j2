log_format compression '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" "$gzip_ratio"';

upstream wsgi_{{ application_name }} {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the gunicorn master nukes a
  # single worker for timing out).

  server unix:{{ gunicorn_socket }} fail_timeout=0;
}
server {
    listen 80;
    #example: server_name www.proopy.com.ar proopy.com.ar
    server_name {{ application_domain_www }} {{ application_domain }};
    return 301 https://{{ application_domain }}$request_uri;
}
server {
    listen   {{ nginx_https_port }};
    server_name {{ application_domain }};

    error_log {{ nginx_error_log }} warn;
    access_log {{ nginx_access_log }} compression;

    ssl    on;
    ssl_certificate   {{ nginx_ssl_crt_path }};
    ssl_certificate_key    {{ nginx_ssl_key_path }};

    client_max_body_size 4G;
    keepalive_timeout 5;
    location /robots.txt {
        alias {{ nginx_static_dir }}robots.txt;
    }
    location /favicon.ico {
        alias {{ nginx_static_dir }}favicon.ico;
    }
    location /media/  {
        alias {{ nginx_media_dir }};
        expires 30d;
    }
    location /static/  {
        alias {{ nginx_static_dir }};
        expires 30d;
    }
    location / {
        {{ nginx_http_auth_mark }}
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Protocol https;
        proxy_redirect off;

        if (!-f $request_filename) {
            proxy_pass http://wsgi_{{ application_name }};
            break;
        }
    }
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

}
